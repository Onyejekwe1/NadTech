// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NadTech.Data;

namespace NadTech.Data.Migrations
{
    [DbContext(typeof(NadTechCustomerDbContext))]
    partial class NadTechCustomerDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.3");

            modelBuilder.Entity("NadTech.Core.Entities.Address", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("TEXT");

                    b.Property<int>("HouseNumber")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("INTEGER");

                    b.Property<string>("PostCode")
                        .HasColumnType("TEXT");

                    b.Property<string>("Street")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Addresses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DateCreated = new DateTime(2021, 3, 16, 21, 26, 33, 619, DateTimeKind.Local).AddTicks(7545),
                            DateModified = new DateTime(2021, 3, 16, 21, 26, 33, 619, DateTimeKind.Local).AddTicks(7549),
                            HouseNumber = 41,
                            IsDeleted = false,
                            PostCode = "112001",
                            Street = "Lawn Street"
                        },
                        new
                        {
                            Id = 2,
                            DateCreated = new DateTime(2021, 3, 16, 21, 26, 33, 619, DateTimeKind.Local).AddTicks(8352),
                            DateModified = new DateTime(2021, 3, 16, 21, 26, 33, 619, DateTimeKind.Local).AddTicks(8352),
                            HouseNumber = 34,
                            IsDeleted = false,
                            PostCode = "1234201",
                            Street = "Test2 Street"
                        },
                        new
                        {
                            Id = 3,
                            DateCreated = new DateTime(2021, 3, 16, 21, 26, 33, 619, DateTimeKind.Local).AddTicks(8357),
                            DateModified = new DateTime(2021, 3, 16, 21, 26, 33, 619, DateTimeKind.Local).AddTicks(8358),
                            HouseNumber = 24,
                            IsDeleted = false,
                            PostCode = "100001",
                            Street = "Test Street"
                        },
                        new
                        {
                            Id = 4,
                            DateCreated = new DateTime(2021, 3, 16, 21, 26, 33, 619, DateTimeKind.Local).AddTicks(8362),
                            DateModified = new DateTime(2021, 3, 16, 21, 26, 33, 619, DateTimeKind.Local).AddTicks(8362),
                            HouseNumber = 24,
                            IsDeleted = false,
                            PostCode = "100001",
                            Street = "Test Street"
                        });
                });

            modelBuilder.Entity("NadTech.Core.Entities.Customer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<int>("AddressId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Age")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("TEXT");

                    b.Property<string>("FirstName")
                        .HasColumnType("TEXT");

                    b.Property<int>("Gender")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("INTEGER");

                    b.Property<string>("LastName")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("AddressId");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            Id = new Guid("1ca9aba0-ce96-4250-9897-5347aa7102a3"),
                            AddressId = 1,
                            Age = new DateTime(1991, 3, 16, 21, 26, 33, 621, DateTimeKind.Local).AddTicks(6831),
                            DateCreated = new DateTime(2021, 3, 16, 21, 26, 33, 621, DateTimeKind.Local).AddTicks(5741),
                            DateModified = new DateTime(2021, 3, 16, 21, 26, 33, 621, DateTimeKind.Local).AddTicks(5765),
                            FirstName = "Jane",
                            Gender = 2,
                            IsDeleted = false,
                            LastName = "Doe"
                        },
                        new
                        {
                            Id = new Guid("d91221fb-3795-4a07-aabd-6c47d5129ab2"),
                            AddressId = 2,
                            Age = new DateTime(1998, 3, 16, 21, 26, 33, 622, DateTimeKind.Local).AddTicks(775),
                            DateCreated = new DateTime(2021, 3, 16, 21, 26, 33, 622, DateTimeKind.Local).AddTicks(751),
                            DateModified = new DateTime(2021, 3, 16, 21, 26, 33, 622, DateTimeKind.Local).AddTicks(764),
                            FirstName = "Bash",
                            Gender = 1,
                            IsDeleted = false,
                            LastName = "Ali"
                        },
                        new
                        {
                            Id = new Guid("0ad339a2-38c2-466d-9261-9bfd12314e4a"),
                            AddressId = 3,
                            Age = new DateTime(2003, 3, 16, 21, 26, 33, 622, DateTimeKind.Local).AddTicks(786),
                            DateCreated = new DateTime(2016, 3, 16, 21, 26, 33, 622, DateTimeKind.Local).AddTicks(787),
                            DateModified = new DateTime(2021, 3, 16, 21, 26, 33, 622, DateTimeKind.Local).AddTicks(784),
                            FirstName = "Shina",
                            Gender = 1,
                            IsDeleted = false,
                            LastName = "Peters"
                        },
                        new
                        {
                            Id = new Guid("44922aed-c036-4aa8-a4af-04a9ec0a21e4"),
                            AddressId = 4,
                            Age = new DateTime(1986, 3, 16, 21, 26, 33, 622, DateTimeKind.Local).AddTicks(792),
                            DateCreated = new DateTime(2021, 3, 16, 21, 26, 33, 622, DateTimeKind.Local).AddTicks(790),
                            DateModified = new DateTime(2021, 3, 16, 21, 26, 33, 622, DateTimeKind.Local).AddTicks(791),
                            FirstName = "Victor",
                            Gender = 1,
                            IsDeleted = false,
                            LastName = "Ifeanyi"
                        });
                });

            modelBuilder.Entity("NadTech.Core.Entities.Order", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Amount")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("CustomerId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("NadTech.Core.Entities.Customer", b =>
                {
                    b.HasOne("NadTech.Core.Entities.Address", "Address")
                        .WithMany()
                        .HasForeignKey("AddressId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Address");
                });

            modelBuilder.Entity("NadTech.Core.Entities.Order", b =>
                {
                    b.HasOne("NadTech.Core.Entities.Customer", "Customer")
                        .WithMany("Orders")
                        .HasForeignKey("CustomerId");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("NadTech.Core.Entities.Customer", b =>
                {
                    b.Navigation("Orders");
                });
#pragma warning restore 612, 618
        }
    }
}
